name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-latest

    steps:

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1


    - name: Login to GitHub Packages
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}


    - name: Prepare metadata
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ghcr.io/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=ref,event=tag
    
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        build-args: |
          APP_RELEASE=${{ github.sha }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}


    - name: copy file via ssh key
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.HOSTNAME }}
        username: ${{ secrets.USER }}
        port: ${{ secrets.PORT }}
        key: ${{ secrets.KEY }}
        source: "compose.yml"
        target: /home/jordan/stacks
    
    - name: Deploy the new image
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOSTNAME }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.KEY }}
        script: |
          cd ~/stacks
          # echo ${{Â secrets.CT_TOKEN }} || docker login -u ${{ github.actor }} --password-stdin
          docker stack deploy -c compose.yml componentsprice --with-registry-auth
